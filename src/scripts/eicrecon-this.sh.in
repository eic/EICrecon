#!/bin/sh
#
# This script was automatically generated from the src/scripts/eicrecon-this.sh.in file in the
# EICrecon source directory when EICrecon was built. It can be sourced to set the environment
# up to use this EICrecon build.
#
# This finds directories relative to this script. This should allow the entire EICrecon directory
# to be moved and this script should still work.
#
# Dependency packages (i.e. JANA2 and ROOT) are setup using absolute paths

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
export EICrecon_ROOT=$( readlink -f ${SCRIPT_DIR}/.. )

# A helper function to prepend paths without duplication,
# allowing for empty and undefined values (but not checking existence),
# but not escaping colons in your paths.
pathadd() {
    local varname="$1"
    local newpath="$2"

    eval "oldvalue=\${${varname}:-}"

    # surround with colon so also first and last entry are individually surrounded
    local canonical=":${oldvalue}:"
    # check whether removing newpath changes old path
    if [ "${canonical#*:${newpath}:}" = "${canonical}" ];
    then
        # newpath not in old path
        if [ -n "${oldvalue}" ]; then
            eval "export $varname=${newpath}:${oldvalue}"
        else
            eval "export $varname=${newpath}"
        fi
    else
        # newpath not in old path
        # redefine as what's before newpath plus what's after newpath
        canonical=${canonical%%:${newpath}:*}:${canonical##*:${newpath}:}
        # substring without surrounding colons
        canonical=$(expr substr ${canonical} 2 $(expr ${#canonical} - 2))
        # prepend newpath
        eval "export $varname=${newpath}:${canonical}"
    fi
}

# Add bin to PATH if not already there
pathadd PATH ${SCRIPT_DIR}

# Add lib to LD_LIBRARY_PATH if not already there
LIB_DIR=$( readlink -f ${EICrecon_ROOT}/lib )
pathadd LD_LIBRARY_PATH ${LIB_DIR}

# Add plugins to JANA_PLUGIN_PATH if not already there
PLUGINS_DIR=$( readlink -f ${EICrecon_ROOT}/@PLUGIN_OUTPUT_DIRECTORY@ )
pathadd JANA_PLUGIN_PATH ${PLUGINS_DIR}

# Add plugin headers to ROOT_INCLUDE_PATH if not already there
HEADERS_DIR=$( readlink -f ${EICrecon_ROOT}/include )
pathadd ROOT_INCLUDE_PATH ${HEADERS_DIR}
